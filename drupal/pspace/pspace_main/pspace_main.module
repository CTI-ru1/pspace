<?php

//-------------------------------------------
//-------------- P-Space HOOKS --------------
//-------------------------------------------

function pspace_main_menu()
{
$stoixeia=array();

$stoixeia['homepage']=array(
	'title'=> t('P-Space Overview Page'),
	'page callback' => 'uberdust_overview',
	'access callback'=>TRUE,
);

return $stoixeia;
}


//-------------------------------------------
//-------------- P-Space PAGES --------------
//-------------------------------------------


function uberdust_overview()
{
$rarray=array();

$testbed = variable_get_value('pspace_rest');


$node_pref = variable_get_value('pspace_node_prefix');
$cap_pref = variable_get_value('pspace_capability_prefix');
// $ws_host = variable_get_value('pspace_websocket_host');
// $ws_prot = variable_get_value('pspace_websocket_protocol');


 
//new
$json=file_get_contents("$testbed/status/json");
$status=json_decode($json);
//drupal_set_message("<pre>".print_r($status,TRUE)."</pre>");

$nodes="";

$i=0;
foreach ($status as $key=>$value) {
	//drupal_set_message("$key<pre>".print_r($value,TRUE)."</pre>");
		
	$j=0;	
	foreach ($value as $node_readings){
		$capability=str_replace($cap_pref,"",$node_readings->capability);
		
		$node[$capability]= isset($node_readings->reading)? $node_readings->reading : $node_readings->stringReading ;
		$stats[$j] = array($capability, isset($node_readings->reading)? $node_readings->reading : $node_readings->stringReading );
		$j++;
	}	

	
	$cleankey=str_replace($node_pref,"",$key);

	
	//node
	$row[$i][0]=l($cleankey,"status",array('query'=>array('node'=>"$cleankey")));

	//room
	//$row[$i][1]= isset($node['room'])? $node['room'] : 'unknown';
	
	//x
	$row[$i][2]= isset($node['x'])? $node['x'] : '-';
	
	//y
	$row[$i][3]= isset($node['y'])? $node['y'] : '-';
	
	//z
	$row[$i][4]= isset($node['z'])? $node['z'] : '-';

	//nodetype
	//$row[$i][5]= isset($node['nodetype'])? $node['nodetype'] : 'unknown';
	
	//status
	/*
	$row[$i][6]= theme ('image', array(
		'path' => '/sites/all/themes/info.png',
		'alt' => 'status',
		'width' => '24px',
		'height' => '24px',
		'attributes' => array(
			'class' => "statusimage",
			'id' => "$cleankey" ,
			),
		) );
	*/	

	$showdivs[$i] = array(
	'#theme' => 'table',
	'#header'=> array('Capability','Latest Reading'),
	'#rows' => $stats,
	'#prefix' => "<div class=\"$cleankey\" style=\"display:none\" >",
	'#suffix' => '</div>',
	);
	

	
	if ((isset($node['x'])) && (isset($node['y']))){
		$x=explode(".",$node['x']);
		$y=explode(".",$node['y']);

//old
/*
$nodes.="<circle cx=\"".$x[0]."\" cy=\"".$y[0]."\" r=\"5\" fill=\"blue\" id='$cleankey' onclick=\"nstatus(this.id)\" >\n
<title>$cleankey</title>\n
</circle>\n";
*/

//link
$nodes.="<a xlink:href=\"status?node=$cleankey\">\n<circle cx=\"".$x[0]."\" cy=\"".$y[0]."\" r=\"5\" fill=\"blue\" id='$cleankey' >\n
<title>$cleankey</title>\n
</circle></a>\n";
	}

unset($node);
$i++;
}



// svg
$image_size=getimagesize(variable_get_value('pspace_image'));
//width: $image_size[0]
//height: $image_size[1]

$svg_head="<?xml version=\"1.0\"?>\n<svg width=\"".$image_size[0]."\" height=\"".$image_size[1]."\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n";
$meta="<metadata id=\"metadata3045\">image/svg+xml</metadata>\n";
$g="<g>\n<title>P-Space</title>\n";

$image="<image y=\"0\" x=\"0\" id=\"pspace\" xlink:href=\"".variable_get_value('pspace_image')."\"width=\"".$image_size[0]."\" height=\"".$image_size[1]."\" />\n";

$g2="</g>\n";
$svg_foot="</svg>\n";


$markup= $svg_head.$meta.$g.$image.$nodes.$g2.$svg_foot;

 $rarray['svg']= array(
  '#markup' => $markup, 
  '#prefix' => "<div class=\"svg\" >",
  '#suffix' => "</div>",
  );


//-----end svg
   
$rarray['nodes'] = array(
'#theme' => 'table',
'#header'=> array('Node','x','y','z'),
'#rows' =>$row,
'#prefix' => '<p>',
'#suffix' => '</p>',
);


$rarray['divs'] = $showdivs;




//onclick show status?

$script="";
$header="<script type=\"text/javascript\">\n";
$script.="function nstatus(image_id){
		jQuery(\".\" + image_id).hide().slideDown(800); }";
$footer="\n</script>";

 $rarray['script_image']= array(
  '#markup' => $header.$script.$footer, 
  );

	



return $rarray;
}

/*
//$json_result=file_get_contents("http://carrot.cti.gr:8080/uberdust/rest/testbed/2/node/".$form_state['values']['select_node']."/capability/".$form_state['values']['select_cap']."/latestreading");
//$result=explode('	',$json_result);
//drupal_set_message("Last Reading: ".$result[1]);
*/
